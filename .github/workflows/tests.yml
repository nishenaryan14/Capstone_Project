name: Selenium Tests with Reports

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest   # keep ubuntu runner, even if your dev machine is Windows

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Install Allure CLI (direct download instead of apt repo)
      - name: Install Allure
        run: |
          curl -o allure-2.29.0.tgz -L https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          tar -zxvf allure-2.29.0.tgz
          sudo mv allure-2.29.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      # 5. Run pytest with HTML + Allure outputs
      - name: Run tests with pytest
        run: |
          pytest src/python/seleniumProject/tests \
            --html=reports/report.html --self-contained-html \
            --alluredir=reports/allure-results \
            --junitxml=reports/junit-report.xml

      # 6. Upload HTML report as artifact
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-html-report
          path: reports/report.html

      # 7. Upload JUnit XML report as artifact
      - name: Upload JUnit XML report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: reports/junit-report.xml

      # 8. Generate Allure report
      - name: Generate Allure report
        run: |
          allure generate reports/allure-results -o reports/allure-report --clean

      # 9. Upload Allure report as artifact
      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: reports/allure-report

  # Optional: Deploy Allure report to GitHub Pages
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: site

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site